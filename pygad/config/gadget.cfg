# Gadget config file
[general]
block order:            POS, VEL, ID, MASS
elements:               He, C, Mg, O, Fe, Si, H, N, Ne, S, Ca, RemainingElements
kernel:                 cubic
# volume definition as by Hopkins (2013); can be overwritten by defining dV in
# `derived.cgf`!
vol_def_x:              1 ;mass
UVB:                    HM01
IMF:                    Kroupa
SSP_dir:                %(PYGAD_DIR)s/bc03
Profile_dir:            $HOME/profiles
# H_neutral_only:       Gadget default value is False. possible values are: True, False
#                       The meaning of true defines H to be only neutral H instead of total H
#H_neutral_only:        False is the default values

# what to do with blocks for which it is unclear what kind of data they have
# possible modes:   exception, warning, ignore
unclear_blocks:         warning

[families]
gas:                    0
stars:                  4
dm:                     1,2,3
bh:                     5
gands:                  0,4
sandbh:                 4,5
baryons:                0,4,5
highres:                0,1,4,5
lowres:                 2,3

[base units]
# the underlying unit system
LENGTH      =   ckpc / h_0      ; = a kpc / h_0
VELOCITY    =   a**(1/2) km / s
MASS        =   1e10 Msol / h_0

[block infos]
# only used, if not HDF5 and does not have an info block
POS     = (3, 'float', 'all')
VEL     = (3, 'float', 'all')
ID      = (1, 'uint', 'all')
MASS    = (1, 'float', None)
U       = (1, 'float', 'gas')
RHO     = (1, 'float', 'gas')
HSML    = (1, 'float', 'gas')
AGE     = (1, 'float', None)  ; None values will be tried to be derived

[block units]
# block units
POS     = LENGTH
VEL     = VELOCITY
ID      = 1
MASS    = MASS
U       = a VELOCITY**2     ; calculated by:
                            #   SphP[pindex].Entropy / GAMMA_MINUS1 *
                            #   pow(SphP[pindex].pd.EgyWtDensity * a3inv,
                            #                               GAMMA_MINUS1)
RHO     = MASS / LENGTH**3
ERHO    = MASS / LENGTH**3  ; energy-weighted density
NE      = 1
NH      = 1
HSML    = LENGTH
SFR     = Msol / yr             ; converted internally
AGE     = a_form                ; if formation *time*: TIME
LET     = 1                     ; "special units"
INIM    = MASS
Z       = MASS
POT     = VELOCITY**2           ; potential
ACCE    = VELOCITY / TIME       ; acceleration
CSTE    = K                     ; CS-model temperature
CSHS    = LENGTH                ; ???
HNGB    = 1                     ; number of hot neighbours
HHSM    = LENGTH                ; ???
BHMA    = MASS                  ; black hole mass (not those from MASS,
                                # which are dynamical masses including
                                # particles that get accreted later)
BHMD    = MASS / TIME           ; kpc / kms = 0.978... Gyr
BHPC    = 1                     ; counter for merged black holes
                                # (stored in LONGs / unsigned ints)
ACRB    = LENGTH                ; accretion length for black holes

[hdf5 names]
POS  = Coordinates
VEL  = Velocities
ID   = ParticleIDs
MASS = Masses
U    = InternalEnergy
RHO  = Density
NE   = ElectronAbundance
NH   = NeutralHydrogenAbundance
HSML = SmoothingLength
SFR  = StarFormationRate
AGE  = StellarFormationTime
INIM = InitialMass
Z    = Metallicity
POT  = Potential
ACCE = Acceleration
CSTE = CS Temperature
HNBG = Hot Ngb Number

